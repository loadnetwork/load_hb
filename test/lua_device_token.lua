--- @module simple_token
--- A simple token implementation compatible with HyperBEAM Lua device
--- Generated by Claude.ai, based on test/test.lua syntax

-- Token state
local TokenName = "SimpleToken"
local TokenSymbol = "SIMPLE" 
local TokenDecimals = 18
local TotalSupply = 1000000
local BalanceTable = {
    ["PeIY7sFRFvbQUKqwhzr5h-f1a2T97FtGsJEvJaeqP-E"] = 1000000 
}

function Info(base, req, opts)
    return {
        Name = TokenName,
        Symbol = TokenSymbol,
        Decimals = TokenDecimals,
        TotalSupply = TotalSupply
    }
end

function Balance(base, req, opts)
    local target = req.target or req.Target
    if not target then
        return "error", "Target address required"
    end
    
    local balance = BalanceTable[target] or 0
    return {
        Target = target,
        Balance = tostring(balance)
    }
end

function Transfer(base, req, opts)
    local from = req.from or req.From
    local to = req.to or req.To
    local amount = tonumber(req.amount or req.Amount)
    
    if not from or not to or not amount then
        return "error", "From, To, and Amount required"
    end
    
    if amount <= 0 then
        return "error", "Amount must be positive"
    end
    
    local fromBalance = BalanceTable[from] or 0
    if fromBalance < amount then
        return "error", "Insufficient balance"
    end
    
    BalanceTable[from] = fromBalance - amount
    BalanceTable[to] = (BalanceTable[to] or 0) + amount
    
    return {
        From = from,
        To = to,
        Amount = tostring(amount),
        Status = "Success"
    }
end

function Mint(base, req, opts)
    local to = req.to or req.To
    local amount = tonumber(req.amount or req.Amount)
    
    if not to or not amount then
        return "error", "To and Amount required"
    end
    
    if amount <= 0 then
        return "error", "Amount must be positive"
    end
    
    BalanceTable[to] = (BalanceTable[to] or 0) + amount
    TotalSupply = TotalSupply + amount
    
    return {
        To = to,
        Amount = tostring(amount),
        Status = "Minted"
    }
end

function Balances(base, req, opts)
    return BalanceTable
end

function hello(base, req, opts)
    base.hello = req.name or "Token World"
    return base
end
